DROP SCHEMA IF EXISTS Project_2_Company;


-- New database named Project_2_Company.


Create schema Project_2_Company;


-- Designates schema for further scripts in file.


USE Project_2_Company;


-- Creates tables for Database.


CREATE TABLE users (user_ID int NOT NULL, user_name varchar(255), group_ID int, PRIMARY KEY (user_ID));

CREATE TABLE groups (group_ID int NOT NULL, group_name varchar(255), PRIMARY KEY(group_ID));

CREATE TABLE rooms (room_ID int NOT NULL, room_name varchar(255), PRIMARY KEY (room_ID));

CREATE TABLE room_access (group_ID int, room_ID int);


-- Inserts data into users table.


INSERT INTO users VALUES (100, 'Modesta', 10);

INSERT INTO users VALUES (200, 'Ayine', 10);

INSERT INTO users VALUES (300, 'Christopher', 20);

INSERT INTO users VALUES (400, 'Cheong Woo', 20);

INSERT INTO users VALUES (500, 'Saulat', 30);

INSERT INTO users VALUES (600, 'Heidy', 30);


-- Inserts data into groups table.


INSERT INTO groups VALUES (10, 'I.T.');

INSERT INTO groups VALUES (20, 'Sales');

INSERT INTO groups VALUES (30, 'Administration');

INSERT INTO groups VALUES (40, 'Operations');


-- Inserts data into rooms table.


INSERT INTO rooms VALUES (1, 101);

INSERT INTO rooms VALUES (2, 102);

INSERT INTO rooms VALUES (3, 'Auditorium A');

INSERT INTO rooms VALUES (4, 'Auditorium B');


-- Inserts data into room_access.


INSERT INTO room_access VALUES (10, 1);

INSERT INTO room_access VALUES (20, 1);

INSERT INTO room_access VALUES (20, 2);

INSERT INTO room_access VALUES (30, 2);

 
-- All groups, and the users in each group. 


SELECT groups.group_name, users.user_name
FROM groups 
LEFT JOIN users
ON groups.group_ID = users.group_ID;


-- All rooms, and the groups assigned to each room.

SELECT rooms.room_name, groups.group_name
FROM rooms
LEFT JOIN room_access
ON rooms.room_ID = room_access.room_ID
LEFT JOIN groups 
ON room_access.group_ID =  groups.group_ID;


/*

A list of users, the groups that they belong to, and the rooms to which they are assigned. This is sorted
alphabetically by user, then by group, then by room.

*/

SELECT users.user_name, groups.group_name, rooms.room_name
FROM users
LEFT JOIN room_access 
ON users.group_ID = room_access.group_ID
LEFT JOIN groups
ON room_access.group_ID = groups.group_ID
LEFT JOIN rooms
ON room_access.room_ID = rooms.room_ID
Order by user_name ASC, group_name ASC, room_name ASC;



